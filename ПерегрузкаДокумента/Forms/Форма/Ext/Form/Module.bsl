#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НастроитьОтображениеКомандыПоказать(Элементы.Показать, ЗначениеЗаполнено(ПутьКДанным));
КонецПроцедуры

#КонецОбласти 

#Область Выгрузка

&НаСервереБезКонтекста
Процедура ДобавитьПредставленияРеквизита(Строка, ИмяРеквизита, ПредставлениеТипа, ПредставлениеЗначения, Отступ = 0)
	
	Табуляция = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов(Символы.Таб, Отступ);
	Строка = Строка + Символы.ПС + Табуляция + Разделитель("Р") + СтрШаблон("%3<%1>%2", ПредставлениеТипа, ПредставлениеЗначения, ИмяРеквизита) + Разделитель("Р", 1);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РеквизитОбъектаВСтроку(Строка, Реквизит, Объект, Отступ = 1)
	
	Значение = Объект[Реквизит.Имя];
	Тип = ТипЗнч(Значение);
	
	ЭтоСсылка = ОбщегоНазначения.ЭтоСсылка(Тип);
	
	Если Не ЗначениеЗаполнено(Значение) Тогда
		//ДобавитьПредставленияРеквизита(Строка, Реквизит.Имя, ПредставлениеТипа, ПредставлениеЗначения, Отступ);
		Возврат;
	КонецЕсли;
	
	ПредставлениеТипа = "";
	
	Если ЭтоСсылка Тогда
		МетаданныеРеквизита = Метаданные.НайтиПоТипу(Тип);
		ПредставлениеТипа = ИмяТипаСсылки(МетаданныеРеквизита.ПолноеИмя());
	Иначе
		ПредставлениеТипа = Строка(Тип);
	КонецЕсли;
	
	Если ПустаяСтрока(ПредставлениеТипа) Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Не найдено представление для типа %1'"), Тип));
	КонецЕсли;
	
	Если Не ЭтоСсылка Тогда
		Если Тип = Тип("ХранилищеЗначения") Тогда
			ПредставлениеЗначения = Строка(Значение.Получить());
		ИначеЕсли Тип = Тип("Строка") Тогда 
			ПредставлениеЗначения = Значение;
		Иначе
			ПредставлениеЗначения = Формат(Значение);
		КонецЕсли; 
		ДобавитьПредставленияРеквизита(Строка, Реквизит.Имя, ПредставлениеТипа, ПредставлениеЗначения, Отступ);
		Возврат;
	КонецЕсли;
	
	ПредставлениеЗначения = "";
	
	Если ОбщегоНазначения.ЭтоДокумент(МетаданныеРеквизита) Тогда
		Если МетаданныеРеквизита.ДлинаНомера > 0 Тогда
			РеквизитОбъектаВСтроку(ПредставлениеЗначения, МетаданныеРеквизита.СтандартныеРеквизиты["Номер"], Значение, Отступ + 1);
		КонецЕсли; 
		РеквизитОбъектаВСтроку(ПредставлениеЗначения, МетаданныеРеквизита.СтандартныеРеквизиты["Дата"], Значение, Отступ + 1);
	ИначеЕсли ОбщегоНазначения.ЭтоСправочник(МетаданныеРеквизита)
		Или ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеРеквизита) 
		Или ОбщегоНазначения.ЭтоПланСчетов(МетаданныеРеквизита)
		Или ОбщегоНазначения.ЭтоПланВидовРасчета(МетаданныеРеквизита) Тогда
		
		Если МетаданныеРеквизита.ДлинаКода > 0 Тогда
			РеквизитОбъектаВСтроку(ПредставлениеЗначения, МетаданныеРеквизита.СтандартныеРеквизиты["Код"], Значение, Отступ + 1);
		КонецЕсли; 
		Если МетаданныеРеквизита.ДлинаНаименования > 0 Тогда
			РеквизитОбъектаВСтроку(ПредставлениеЗначения, МетаданныеРеквизита.СтандартныеРеквизиты["Наименование"], Значение, Отступ + 1);
		КонецЕсли;
	ИначеЕсли ОбщегоНазначения.ЭтоПеречисление(МетаданныеРеквизита) Тогда
		Для Каждого МетаданныеЗначения Из МетаданныеРеквизита.ЗначенияПеречисления Цикл
			ПредставлениеЗначения = МетаданныеЗначения.Имя;
			Если Перечисления[МетаданныеРеквизита.Имя][МетаданныеЗначения.Имя] = Значение Тогда
				Прервать
			КонецЕсли;
		КонецЦикла;
	Иначе
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Непредусмотренный тип ""%1"". Значение: ""%2""'"), Тип, Значение));
	КонецЕсли;
	
	ДобавитьПредставленияРеквизита(Строка, Реквизит.Имя, ПредставлениеТипа, ПредставлениеЗначения, Отступ);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДокументВСтрокуНаСервере(ДокументСсылка)
	
	ТипДокумента = ТипЗнч(ДокументСсылка);
	МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипДокумента);
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	
	Результат = СтрШаблон("%1<%2>", Разделитель("Д"), ИмяТипаСсылки(МетаданныеДокумента.ПолноеИмя()));
	
	НеВыгружатьРеквизиты = СтрРазделить("Ссылка", ",", Ложь);
	Для Каждого СтРеквизит Из МетаданныеДокумента.СтандартныеРеквизиты Цикл
		Если НеВыгружатьРеквизиты.Найти(СтРеквизит.Имя) <> Неопределено Тогда Продолжить КонецЕсли;
		РеквизитОбъектаВСтроку(Результат, СтРеквизит, ДокументОбъект);
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеДокумента.Реквизиты Цикл
		РеквизитОбъектаВСтроку(Результат, Реквизит, ДокументОбъект);
	КонецЦикла; 
	
	Для Каждого ТабличнаяЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл 
		Если ДокументОбъект[ТабличнаяЧасть.Имя].Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Результат = Результат + Символы.ПС + Символы.Таб + Разделитель("Т") + ТабличнаяЧасть.Имя + "[";
		Для Каждого Строка Из ДокументОбъект[ТабличнаяЧасть.Имя] Цикл
			Результат = Результат + Символы.ПС + Символы.Таб + Разделитель("С");
			Для Каждого РеквизитТЧ Из ТабличнаяЧасть.Реквизиты Цикл
				РеквизитОбъектаВСтроку(Результат, РеквизитТЧ, Строка, 2);
			КонецЦикла;
			Результат = Результат + Разделитель("С", 1);
		КонецЦикла; 
		Результат = Результат + "]" + Разделитель("Т", 1);
	КонецЦикла;
	
	Результат = Результат + Разделитель("Д", 1);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область Загрузка

&НаСервереБезКонтекста
Функция СтруктураСтрокОбъекта(Знач Строка, Знач НачальнаяПозиция, Знач Назначение, Результат)
	
	Результат = Новый Структура("Назначение, Имя, ТипСтрокой, ДанныеСтрокой", Назначение);
	
	НачалоОбъекта = СтрНайти(Строка, Разделитель(Назначение), , НачальнаяПозиция) + СтрДлина(Разделитель(Назначение));
	Если НачалоОбъекта <= СтрДлина(Разделитель(Назначение)) Тогда
		ВызватьИсключение СтрШаблон("Ожидается открывающий разделитель (%1)", Разделитель(Назначение));
	КонецЕсли; 
	СтекОбъектов = 1;
	Позиция = НачалоОбъекта + 1; 
	Пока СтекОбъектов > 0 И Позиция < СтрДлина(Строка) Цикл
		СледОткрывающий = СтрНайти(Строка, Разделитель(Назначение), , Позиция);
		Если СледОткрывающий = 0 Тогда СледОткрывающий = СтрДлина(Строка) КонецЕсли; 
		СледЗакрывающий = СтрНайти(Строка, Разделитель(Назначение, 1), , Позиция);
		Если СледЗакрывающий = 0 Тогда СледЗакрывающий = СтрДлина(Строка) КонецЕсли; 
		
		Если СледОткрывающий < СледЗакрывающий Тогда
			СтекОбъектов = СтекОбъектов + 1;
		ИначеЕсли СледОткрывающий > СледЗакрывающий Тогда 
			СтекОбъектов = СтекОбъектов - 1;
		Иначе
			ВызватьИсключение СтрШаблон("Ожидается закрывающий разделитель (%1)", Разделитель(Назначение, 1));
		КонецЕсли; 
		
		Позиция = Мин(СледОткрывающий, СледЗакрывающий) + 1;
	КонецЦикла;
	Если СтекОбъектов <> 0 Тогда
		ВызватьИсключение СтрШаблон("Ожидается закрывающий разделитель (%1)", Разделитель(Назначение, 1));
	КонецЕсли;
	КонецОбъекта = СледЗакрывающий;
	
	ДанныеОбъектаСтрокой = Сред(Строка, НачалоОбъекта, КонецОбъекта - НачалоОбъекта);
	
	//Сообщить(ДанныеОбъектаСтрокой);
	
	Если Назначение = "С" Тогда
		Результат.ДанныеСтрокой = СокрЛП(ДанныеОбъектаСтрокой);
	КонецЕсли;
	
	Если Назначение = "Т" Тогда
		НачалоМассива = СтрНайти(ДанныеОбъектаСтрокой, "[");
		КонецМассива = СтрНайти(ДанныеОбъектаСтрокой, "]", НаправлениеПоиска.СКонца);
		Результат.Имя = СокрЛП(Лев(ДанныеОбъектаСтрокой, НачалоМассива - 1));
		Результат.ДанныеСтрокой = СокрЛП(Сред(ДанныеОбъектаСтрокой, НачалоМассива + 1, КонецМассива - НачалоМассива - 1));
	КонецЕсли;
	
	Если Назначение = "Д" Или Назначение = "Р" Тогда
		НачалоТипа = СтрНайти(ДанныеОбъектаСтрокой, "<");
		КонецТипа = СтрНайти(ДанныеОбъектаСтрокой, ">");
		Результат.Имя = СокрЛП(Лев(ДанныеОбъектаСтрокой, НачалоТипа - 1));
		Результат.ТипСтрокой = СокрЛП(Сред(ДанныеОбъектаСтрокой, НачалоТипа + 1, КонецТипа - НачалоТипа - 1));
		Результат.ДанныеСтрокой = СокрЛП(Прав(ДанныеОбъектаСтрокой, СтрДлина(ДанныеОбъектаСтрокой) - КонецТипа));
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Результат.ДанныеСтрокой) Тогда
		ВызватьИсключение СтрШаблон("Не предусмотренно разбиение строки назначения (%1)", Назначение);
	КонецЕсли; 
	
	Возврат КонецОбъекта + СтрДлина(Разделитель(Назначение, 1)); 
	
КонецФункции 

&НаСервереБезКонтекста
Функция СледующаяСтруктураСтрокОбъекта(Знач Строка, Знач Назначения, НачальнаяПозиция = 1, Результат)
	
	ДоступныеНазначения = СтрРазделить(Назначения, ",", Ложь);
	СокрСтрока = СокрЛ(Сред(Строка, НачальнаяПозиция));
	
	Результат = Новый Структура;
	
	Для Каждого Назначение Из ДоступныеНазначения Цикл
		Если Не СтрНайти(Назначения, Назначение) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрНачинаетсяС(СокрСтрока, Разделитель(Назначение)) Тогда
			НачальнаяПозиция = СтруктураСтрокОбъекта(Строка, НачальнаяПозиция, Назначение, Результат);
			Возврат Истина;
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъектаИзСтроки(ТипЗначения, ЗначениеСтрокой)
	
	Если ОбщегоНазначения.ЭтоСсылка(ТипЗначения) Тогда
		СтруктураРеквизитаПоиска = Неопределено;
		ИтераторДанныхРеквизита = 1;
		МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗначения);
		МенеджерЗначения = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеЗначения.ПолноеИмя());
		
		Если ОбщегоНазначения.ЭтоДокумент(МетаданныеЗначения) Тогда
			
			РеквизитыПоиска = Новый Структура("Номер, Дата");
			Пока СледующаяСтруктураСтрокОбъекта(ЗначениеСтрокой, "Р", ИтераторДанныхРеквизита, СтруктураРеквизитаПоиска) Цикл
				Если СтруктураРеквизитаПоиска.Имя = "Номер" Тогда
					Если СтруктураРеквизитаПоиска.ТипСтрокой = "Число" Тогда
						РеквизитыПоиска.Номер = Число(СтруктураРеквизитаПоиска.ДанныеСтрокой);
					ИначеЕсли СтруктураРеквизитаПоиска.ТипСтрокой = "Строка" Тогда
						РеквизитыПоиска.Номер = СтруктураРеквизитаПоиска.ДанныеСтрокой;
					КонецЕсли;
				ИначеЕсли СтруктураРеквизитаПоиска.Имя = "Дата" Тогда 
					РеквизитыПоиска.Дата = Дата(СтруктураРеквизитаПоиска.ДанныеСтрокой);
				КонецЕсли; 
			КонецЦикла;
			Если МетаданныеЗначения.ДлинаНомера > 0 Тогда
				Возврат МенеджерЗначения.НайтиПоНомеру(РеквизитыПоиска.Номер, РеквизитыПоиска.Дата);
			Иначе
				Возврат МенеджерЗначения.НайтиПоРеквизиту("Дата", РеквизитыПоиска.Дата);
			КонецЕсли; 
			
		ИначеЕсли ОбщегоНазначения.ЭтоСправочник(МетаданныеЗначения)
			Или ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеЗначения) 
			Или ОбщегоНазначения.ЭтоПланСчетов(МетаданныеЗначения)
			Или ОбщегоНазначения.ЭтоПланВидовРасчета(МетаданныеЗначения) Тогда
			
			РеквизитыПоиска = Новый Структура("Код, Наименование");
			Пока СледующаяСтруктураСтрокОбъекта(ЗначениеСтрокой, "Р", ИтераторДанныхРеквизита, СтруктураРеквизитаПоиска) Цикл
				Если СтруктураРеквизитаПоиска.Имя = "Код" Тогда
					Если СтруктураРеквизитаПоиска.ТипСтрокой = "Число" Тогда
						РеквизитыПоиска.Код = Число(СтруктураРеквизитаПоиска.ДанныеСтрокой);
					ИначеЕсли СтруктураРеквизитаПоиска.ТипСтрокой = "Строка" Тогда
						РеквизитыПоиска.Код = СтруктураРеквизитаПоиска.ДанныеСтрокой;
					КонецЕсли;
				ИначеЕсли СтруктураРеквизитаПоиска.Имя = "Наименование" Тогда 
					РеквизитыПоиска.Наименование = СтруктураРеквизитаПоиска.ДанныеСтрокой;
				КонецЕсли; 
			КонецЦикла;
			Если МетаданныеЗначения.ДлинаКода > 0 Тогда
				Возврат МенеджерЗначения.НайтиПоКоду(РеквизитыПоиска.Код);
			ИначеЕсли МетаданныеЗначения.ДлинаНаименования > 0 Тогда 
				Возврат МенеджерЗначения.НайтиПоНаименованию(РеквизитыПоиска.Наименование, Истина);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Ссылка типа ""%1"" не может быть найдена по стандартным реквизитам", "ru"), ТипЗначения));
				Возврат Неопределено;
			КонецЕсли; 
			
		ИначеЕсли ОбщегоНазначения.ЭтоПеречисление(МетаданныеЗначения) Тогда
			
			Возврат МенеджерЗначения[ЗначениеСтрокой];
			
		Иначе
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Ссылочный тип ""%1"" не найден", "ru"), ТипЗначения));
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда 
		Возврат ЗначениеСтрокой;
	ИначеЕсли ТипЗначения = Тип("Число") Тогда
		Возврат Число(ЗначениеСтрокой);
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		Возврат Булево(ЗначениеСтрокой);
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		Возврат Дата(ЗначениеСтрокой);
	ИначеЕсли ТипЗначения = Тип("ХранилищеЗначения") Тогда
		Возврат Новый ХранилищеЗначения(ПолучитьДвоичныеДанныеИзСтроки(ЗначениеСтрокой, КодировкаТекста.UTF8));
	Иначе
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Тип ""%1"" не найден", "ru"), ТипЗначения));
		Возврат Неопределено;
	КонецЕсли; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяЕстьВКоллекцииОбъектовМетаданных(Знач Имя, КоллекцияОбъектовМетаданных)
	
	Для Каждого ОбъектМетаданных Из КоллекцияОбъектовМетаданных Цикл
		Если ОбъектМетаданных.Имя = Имя Тогда
			Возврат Истина;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат Ложь;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ДокументИзСтрокиНаСервере(ДокументСериализация)
	
	СтруктураДокумента = Неопределено;
	Если Не СледующаяСтруктураСтрокОбъекта(ДокументСериализация, "Д", , СтруктураДокумента) Тогда
		ОбщегоНазначения.СообщитьПользователю(нСтр("ru='Не найдено описание документа'", "ru"));
	КонецЕсли; 
	
	ТипДокумента = Тип(СтруктураДокумента.ТипСтрокой);
	МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипДокумента);
	ДокументМенеджер = Документы[МетаданныеДокумента.Имя];
	ДокументОбъект = ДокументМенеджер.СоздатьДокумент();
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	
	НеЗагружатьРеквизиты = СтрРазделить("Номер,Дата,Ссылка", ",", Ложь);
	
	ИтераторДанныхДокумента = 1;
	СтруктураРеквизитаИлиТаблицы = Неопределено;
	Пока СледующаяСтруктураСтрокОбъекта(СтруктураДокумента.ДанныеСтрокой, "Р,Т", ИтераторДанныхДокумента, СтруктураРеквизитаИлиТаблицы) Цикл
		
		ИмяРеквизитаИлиТаблицы = СтруктураРеквизитаИлиТаблицы.Имя;
		Если НеЗагружатьРеквизиты.Найти(ИмяРеквизитаИлиТаблицы) <> Неопределено Тогда Продолжить КонецЕсли;
		
		Если ИмяЕстьВКоллекцииОбъектовМетаданных(ИмяРеквизитаИлиТаблицы, МетаданныеДокумента.Реквизиты)
			Или ИмяЕстьВКоллекцииОбъектовМетаданных(ИмяРеквизитаИлиТаблицы, МетаданныеДокумента.СтандартныеРеквизиты) Тогда
			
			// Распарсить реквизит
			ЗначениеРеквизита = ЗначениеРеквизитаОбъектаИзСтроки(Тип(СтруктураРеквизитаИлиТаблицы.ТипСтрокой), СтруктураРеквизитаИлиТаблицы.ДанныеСтрокой);
			Если ЗначениеРеквизита = Неопределено Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Реквизит ""%1"" не будет загружен'", "ru"), ИмяРеквизитаИлиТаблицы)); 
			КонецЕсли;
			ДокументОбъект[ИмяРеквизитаИлиТаблицы] = ЗначениеРеквизита;
			
		ИначеЕсли ИмяЕстьВКоллекцииОбъектовМетаданных(ИмяРеквизитаИлиТаблицы, МетаданныеДокумента.ТабличныеЧасти) Тогда 
			
			// Распарсить таблицу
			ИмяТаблицы = ИмяРеквизитаИлиТаблицы;
			СтруктураСтрокиТаблицы = Неопределено;
			ИтераторСтрокТаблицы = 1;
			Пока СледующаяСтруктураСтрокОбъекта(СтруктураРеквизитаИлиТаблицы.ДанныеСтрокой, "С", ИтераторСтрокТаблицы, СтруктураСтрокиТаблицы) Цикл
				СтрокаТаблицы = ДокументОбъект[ИмяТаблицы].Добавить();
				СтруктураРеквизитаСтроки = Неопределено;
				ИтераторРеквизитовСтроки = 1;
				Пока СледующаяСтруктураСтрокОбъекта(СтруктураСтрокиТаблицы.ДанныеСтрокой, "Р", ИтераторРеквизитовСтроки, СтруктураРеквизитаСтроки) Цикл
					ЗначениеРеквизита = ЗначениеРеквизитаОбъектаИзСтроки(Тип(СтруктураРеквизитаСтроки.ТипСтрокой), СтруктураРеквизитаСтроки.ДанныеСтрокой);
					Если ЗначениеРеквизита = Неопределено Тогда
						ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Реквизит ""%1"" строки %2 табличной части ""%3"" не будет загружен'", "ru"),
															  СтруктураРеквизитаСтроки.Имя,
															  СтрокаТаблицы.НомерСтроки,
															  ИмяРеквизитаИлиТаблицы)); 
					КонецЕсли;
					СтрокаТаблицы[СтруктураРеквизитаСтроки.Имя] = ЗначениеРеквизита;
				КонецЦикла; 
			КонецЦикла; 
			
		Иначе
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Не найдено поле ""%1"" документа %2'", "ru"), ИмяРеквизитаИлиТаблицы, ТипДокумента));
		КонецЕсли; 
		
	КонецЦикла;
	
	Попытка
		Попытка
			ДокументОбъект.Записать(?(ДокументОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
		Исключение
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецПопытки;
	Исключение
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(нСтр("ru='Не удалось записать документ по причине:
																 | %1'"), КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
	КонецПопытки; 
	
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Документ) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(нСтр("ru='Не заполнен ""Документ""'"), , "Документ", , Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПутьКДанным) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(нСтр("ru='Не выбран файл'"), , "ПутьКДанным", , Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		ДокументСериализация = ДокументВСтрокуНаСервере(Документ);
		
		ПотокЗаписи = Новый ФайловыйПоток(ПутьКДанным, РежимОткрытияФайла.Создать, ДоступКФайлу.Запись);
		ЗаписьТекста = Новый ЗаписьТекста(ПотокЗаписи, КодировкаТекста.UTF8);
		ЗаписьТекста.Записать(ДокументСериализация);
		ЗаписьТекста.Закрыть();
		ПотокЗаписи.Закрыть();
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(нСтр("ru='Выгрузка завершена'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(ПутьКДанным) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(нСтр("ru='Не выбран файл'"), , "ПутьКДанным", , Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		ПотокЧтения = Новый ФайловыйПоток(ПутьКДанным, РежимОткрытияФайла.Открыть, ДоступКФайлу.Чтение);
		ЧтениеТекста = Новый ЧтениеТекста(ПотокЧтения, КодировкаТекста.UTF8);
		ДокументСериализация = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
		ПотокЧтения.Закрыть();
		
		МаксЧисло = СтрДлина(ДокументСериализация) + 1;
		
		НовыйДокумент = ДокументИзСтрокиНаСервере(ДокументСериализация);
		Если НовыйДокумент.Пустая() Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(нСтр("ru='Загрузка завершена с ошибками'")));
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(нСтр("ru='Загрузка завершена. Создан документ ""%1""'"), НовыйДокумент), НовыйДокумент);
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Показать(Команда)
	
	Если Не ЗначениеЗаполнено(ПутьКДанным) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ПутьКДанным, КодировкаТекста.UTF8);
	
	ТекстовыйДокумент.Показать(нСтр("ru='Выгрузка документа'", "ru"), ПутьКДанным);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПутьКДаннымПриИзменении(Элемент)
	НастроитьОтображениеКомандыПоказать(Элементы.Показать, ЗначениеЗаполнено(ПутьКДанным));
КонецПроцедуры

&НаКлиенте
Процедура ПутьКДаннымНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогВыбораФайлаЗавершение", ЭтотОбъект);
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаЗавершение(МассивПутей, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(МассивПутей) Тогда
		ПутьКДанным = МассивПутей[0];
	КонецЕсли;
	
	НастроитьОтображениеКомандыПоказать(Элементы.Показать, ЗначениеЗаполнено(ПутьКДанным));
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяТипаСсылки(ПолноеИмя)
	
	Массив = СтрРазделить(ПолноеИмя, ".", Ложь);
	Возврат Массив[0] + "Ссылка." + ?(Массив.Количество() > 1, Массив[1],"") 
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Разделитель(Назначение, Закрывающий = 0)
	
	Если Назначение = "Д" Тогда //Документ
		ПредставлениеНазначения = "doc";
	ИначеЕсли Назначение = "Р" Тогда //Реквизит
		ПредставлениеНазначения = "attr";
	ИначеЕсли Назначение = "Т" Тогда //Табличная часть
		ПредставлениеНазначения = "table";
	ИначеЕсли Назначение = "С" Тогда //Строка табличной части
		ПредставлениеНазначения = "tuple";
	Иначе
		ВызватьИсключение СтрШаблон("Непредвиденное назначение разделителя (%1)", Назначение);
	КонецЕсли; 
		
	Возврат СтрШаблон("<%1%2>", ?(Закрывающий, "/", ""), ПредставлениеНазначения);
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтображениеКомандыПоказать(КнопкаКоманды, ЗаполненПуть)
	
	КнопкаКоманды.Видимость = ЗаполненПуть;
	
КонецПроцедуры 

#КонецОбласти